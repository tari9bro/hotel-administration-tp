hotel project 



1 create data base :

CREATE DATABASE hotel_db
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

2  create tabels:


-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admins
(
    id integer NOT NULL DEFAULT nextval('admins_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    pass character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT admins_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    id integer NOT NULL DEFAULT nextval('clients_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    pass character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT clients_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reservation
(
    requestid integer NOT NULL DEFAULT nextval('reservation_requestid_seq'::regclass),
    clientid integer,
    roomid integer,
    status character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT reservation_pkey PRIMARY KEY (requestid)
);

CREATE TABLE IF NOT EXISTS public.rooms
(
    room_id integer NOT NULL DEFAULT nextval('rooms_room_id_seq'::regclass),
    reservation_start_date date,
    reservation_duration integer,
    CONSTRAINT rooms_pkey PRIMARY KEY (room_id)
);

ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_clientid_fkey FOREIGN KEY (clientid)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_roomid_fkey FOREIGN KEY (roomid)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;


5. create trigger to decrement reservation_duration by 1 each day

CREATE OR REPLACE FUNCTION decrement_duration_trigger()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.reserved THEN
        NEW.reservation_duration := NEW.reservation_duration - 1;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER DecrementDurationTrigger
BEFORE INSERT ON Rooms
FOR EACH ROW
EXECUTE FUNCTION decrement_duration_trigger();

6. create a trigger to set current day to reservation_start_date when the cullum reserved = true 

CREATE OR REPLACE FUNCTION set_reservation_start_date()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.reserved THEN
        NEW.reservation_start_date := CURRENT_DATE;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER SetReservationStartDateTrigger
BEFORE UPDATE OF reserved ON Rooms
FOR EACH ROW
EXECUTE FUNCTION set_reservation_start_date();
